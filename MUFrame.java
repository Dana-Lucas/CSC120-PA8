/* CSC 120 PA7
 * Dana Lucas
 * 11/20/19
 *
 * Project Description: This program calculates the average melting temperature and maximum Young's Modulus for 
 *                      various materials. It also lists out all materials, and then those that are alloys and
 *                      those that are metals, separately.
 *
 * Acknowledgements:
 * 
 */

import java.awt.*;
import javax.swing.*;

public class MUFrame extends javax.swing.JFrame {

    private MUPanel muPanel;
    
    // declare private data here
    
    private Material[] materials;
    
    // constructor method
    public MUFrame() {
        initComponents();
        muPanel = new MUPanel();
        drawingPanel.add(muPanel);
        
//        materials = new Material[10];
//        
//        materials[0] = new Material("Zinc","metal",42,220,232,0.33,5767);
//        materials[1] = new Material("Nitinol","alloy",60,1070,13010,0.33,6500);
//        materials[2] = new Material("Aluminum","metal", 70,47,660,0.33,2700);
//        materials[3] = new Material("Nickel","metal",207,45,1455,0.31,8880);
//        materials[4] = new Material("Titanium","metal",103,240,1670,0.37,4500);
//        materials[5] = new Material("Iron","metal",200,540,1535,0.291,7870);
//        materials[6] = new Material("Lead","metal",14,18,328,0.42,10220);
//        materials[7] = new Material("Tungston","metal",400,980,3370,0.28,19300);
//        materials[8] = new Material("Bronze","alloy",115,260,1030,0.307,8800);
//        materials[9] = new Material("Brass","alloy",115,270,1000,0.307,8750);

//        Zinc,metal,42,220,232,0.33,5767
//        Nitinol,alloy,60,1070,13010,0.33,6500
//        Aluminum,metal, 70,47,660,0.33,2700
//        Nickel,metal,207,45,1455,0.31,8880
//        Titanium,metal,103,240,1670,0.37,4500
//        Iron,metal,200,540,1535,0.291,7870
//        Lead,metal,14,18,328,0.42,10220
//        Tungston,metal,400,980,3370,0.28,19300
//        Bronze,alloy,115,260,1030,0.307,8800
//        Brass,alloy,115,270,1000,0.307,8750
        
        
    } // end of constructor
    
    // declare other methods here
    
    
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawingPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        processInputDataButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        clearInputButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Program authored by Dana Lucas");

        jLabel1.setFont(new java.awt.Font("PMingLiU-ExtB", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 100, 0));
        jLabel1.setText("CSC 120 PA8");

        jLabel2.setText("Display Material Data");

        processInputDataButton.setText("Process Input Data");
        processInputDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processInputDataButtonActionPerformed(evt);
            }
        });

        inputArea.setColumns(20);
        inputArea.setRows(5);
        jScrollPane2.setViewportView(inputArea);

        outputArea.setColumns(20);
        outputArea.setRows(5);
        jScrollPane1.setViewportView(outputArea);

        clearInputButton.setText("Clear Input Data");
        clearInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearInputButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Type in material name (string), category (string; typically metal or alloy), young's modulus (integer in GPa), ");

        jLabel4.setText("ultimate tensile strength (integer in MPa), melting point (integer in *C), poissons ratio (double), ");

        jLabel5.setText("density (integer in kg/m^3) each separated by a comma. Start each material on a new line.");

        jLabel7.setFont(new java.awt.Font("PMingLiU-ExtB", 0, 18)); // NOI18N
        jLabel7.setText("Input Area");

        jLabel8.setFont(new java.awt.Font("PMingLiU-ExtB", 0, 18)); // NOI18N
        jLabel8.setText("Output Area");

        javax.swing.GroupLayout drawingPanelLayout = new javax.swing.GroupLayout(drawingPanel);
        drawingPanel.setLayout(drawingPanelLayout);
        drawingPanelLayout.setHorizontalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelLayout.createSequentialGroup()
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(drawingPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(drawingPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2))))
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(processInputDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(clearInputButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        drawingPanelLayout.setVerticalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processInputDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearInputButton))
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearInputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearInputButtonActionPerformed
        inputArea.setText("");
    }//GEN-LAST:event_clearInputButtonActionPerformed

    private void processInputDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processInputDataButtonActionPerformed
        String theInput = inputArea.getText();
        outputArea.setText("");  // initially empty
        String[] lineOfInput;
        lineOfInput = theInput.split("\n");

        outputArea.setText("There are " + lineOfInput.length + " lines in the input.\n\n");
        outputArea.append("Here is the input, line by line:\n");

        materials = new Material[lineOfInput.length];

        for(int i = 0; i<lineOfInput.length; i++){
            String[] part = lineOfInput[i].split(",");
            for (Integer p = 0; p < part.length; p++) {
                part[p] = part[p].trim();
            } // end for
            materials[i] = new Material(part[0],part[1],Integer.parseInt(part[2]),Integer.parseInt(part[3]),Integer.parseInt(part[4]),Double.parseDouble(part[5]),Integer.parseInt(part[6]));
            outputArea.append( "line " + i + ": " + materials[i].toString() + "\n" );
        }
        outputArea.append("===================================");
        
        Integer totalMP = 0, count = 0;
        Double avgMP = 0.0;
        for(int i = 0; i < materials.length; i++){
            totalMP += materials[i].getMeltingPoint();
            count++;
            }
        avgMP = 1.0*totalMP/count;
        outputArea.append("\nThe average melting point is " + avgMP + "*C.\n");
        outputArea.append("===================================");
        
        Integer maxValue = Integer.MIN_VALUE;
        for(int i = 0; i < materials.length; i++){
            if(materials[i].getYoungsModulus() > maxValue){
                maxValue = materials[i].getYoungsModulus();
            }    
        }
        outputArea.append("\nThe maximum Young's Modulus is " + maxValue + " GPa.\n");
        outputArea.append("===================================");
        
        for(int i = 0; i < materials.length; i++){
            outputArea.append("\n" + materials[i].toString());
        }
        outputArea.append("\n\nThere are " + materials.length + " materials listed.\n");
        outputArea.append("===================================");
        
        Integer numAlloys = 0;
        for(int i = 0; i < materials.length; i++){
            if(materials[i].getCategory().equals("alloy")){
                numAlloys++;
                outputArea.append("\n" + materials[i].toString());
            }
        }
            outputArea.append("\n\nThere are " + numAlloys + " alloys.\n");
            outputArea.append("===================================");
        
        Integer numMetals = 0;
        for(int i = 0; i < materials.length; i++){
            if(materials[i].getCategory().equals("metal")){
                numMetals++;
                outputArea.append("\n" + materials[i].toString());
            }
        }
        outputArea.append("\n\nThere are " + numMetals + " metals.\n");
        outputArea.append("===================================");
        
    }//GEN-LAST:event_processInputDataButtonActionPerformed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MUFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearInputButton;
    private javax.swing.JPanel drawingPanel;
    private javax.swing.JTextArea inputArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JButton processInputDataButton;
    // End of variables declaration//GEN-END:variables
}
